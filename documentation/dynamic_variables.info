== DYNAMIC VARIABLE DOCUMENTATION ==
 
== Global Dynamic Variables ==
countries : get array of all countries (including non existing

date : get date value that can be comparable to other date values and localized using GetDateString/GetDateStringShortMonth/GetDateStringNoHour/GetDateStringNoHourLong scripted locs

ideology_groups : array of objects in ideology_groups database

majors : get array of all majors (including non existing

num_days : current total days

operations : array of objects in operations database

year : current year

(Trigger) difficulty : check if the difficulty is above or below specified value 0-2 (difficulty enum). Example: difficulty > 0 (above easy)

(Trigger) threat : check the global threat value. 0-1 value


=================

== Country Dynamic Variables ==
ai_attitude_allied_weight : weight for an ai attitude attitude_alliedagainst country. Example: GER.ai_attitude_allied_weight@ENG

ai_attitude_friendly_weight : weight for an ai attitude attitude_friendlyagainst country. Example: GER.ai_attitude_friendly_weight@ENG

ai_attitude_hostile_weight : weight for an ai attitude attitude_hostileagainst country. Example: GER.ai_attitude_hostile_weight@ENG

ai_attitude_is_threatened : returns 1 if ai is threatened

ai_attitude_neutral_weight : weight for an ai attitude attitude_neutralagainst country. Example: GER.ai_attitude_neutral_weight@ENG

ai_attitude_outraged_weight : weight for an ai attitude attitude_outragedagainst country. Example: GER.ai_attitude_outraged_weight@ENG

ai_attitude_protective_weight : weight for an ai attitude attitude_protectiveagainst country. Example: GER.ai_attitude_protective_weight@ENG

ai_attitude_threatened_weight : weight for an ai attitude attitude_threatenedagainst country. Example: GER.ai_attitude_threatened_weight@ENG

ai_attitude_wants_ally : returns 1 if ai wants ally

ai_attitude_wants_antagonize : returns 1 if ai wants antagonize

ai_attitude_wants_ignore : returns 1 if ai wants ignore

ai_attitude_wants_protect : returns 1 if ai wants protect

ai_attitude_wants_weaken : returns 1 if ai wants weaken

ai_strategy_activate_crypto : ai strategy value activate_crypto against country. Example: GER.ai_strategy_activate_crypto@ENG

ai_strategy_alliance : ai strategy value alliance against country. Example: GER.ai_strategy_alliance@ENG

ai_strategy_antagonize : ai strategy value antagonize against country. Example: GER.ai_strategy_antagonize@ENG

ai_strategy_befriend : ai strategy value befriend against country. Example: GER.ai_strategy_befriend@ENG

ai_strategy_conquer : ai strategy value conquer against country. Example: GER.ai_strategy_conquer@ENG

ai_strategy_consider_weak : ai strategy value consider_weak against country. Example: GER.ai_strategy_consider_weak@ENG

ai_strategy_contain : ai strategy value contain against country. Example: GER.ai_strategy_contain@ENG

ai_strategy_declare_war : ai strategy value declare_war against country. Example: GER.ai_strategy_declare_war@ENG

ai_strategy_decrypt_target : ai strategy value decrypt_target against country. Example: GER.ai_strategy_decrypt_target@ENG

ai_strategy_dont_defend_ally_borders : ai strategy value dont_defend_ally_borders against country. Example: GER.ai_strategy_dont_defend_ally_borders@ENG

ai_strategy_force_defend_ally_borders : ai strategy value force_defend_ally_borders against country. Example: GER.ai_strategy_force_defend_ally_borders@ENG

ai_strategy_ignore : ai strategy value ignore against country. Example: GER.ai_strategy_ignore@ENG

ai_strategy_ignore_claim : ai strategy value ignore_claim against country. Example: GER.ai_strategy_ignore_claim@ENG

ai_strategy_influence : ai strategy value influence against country. Example: GER.ai_strategy_influence@ENG

ai_strategy_invade : ai strategy value invade against country. Example: GER.ai_strategy_invade@ENG

ai_strategy_occupation_policy : ai strategy value occupation_policy against country. Example: GER.ai_strategy_occupation_policy@ENG

ai_strategy_prepare_for_war : ai strategy value prepare_for_war against country. Example: GER.ai_strategy_prepare_for_war@ENG

ai_strategy_protect : ai strategy value protect against country. Example: GER.ai_strategy_protect@ENG

ai_strategy_send_volunteers_desire : ai strategy value send_volunteers_desire against country. Example: GER.ai_strategy_send_volunteers_desire@ENG

ai_strategy_support : ai strategy value support against country. Example: GER.ai_strategy_support@ENG

air_intel : air intel against a target country. example GER.air_intel@ENG

allies : array of allies (faction members). prefer using faction_members instead

army_intel : army intel against a target country. example GER.army_intel@ENG

army_leaders : all army leaders of a country

autonomy_ratio : autonomy of scope country. -1 if not a subject

capital : capital state of the country

civilian_intel : civilian intel against a target country. example GER.civilian_intel@ENG

command_power : total command power of country

controlled_states : array of controlled states

core_compliance : returns core compliance of target country

core_resistance : returns core resistance of target country

core_states : array of core states

cryptology_defense_level : cryptology defense level of a country

current_party_ideology_group : returns the token for current party ideology group

days_mission_timeout : timeout in days for a specific timed mission, mission type token is defined in target. example: days_mission_timeout@GER_mefo_bills_mission

decryption_speed : total encryption strength of a country that is needed

encryption_strength : total encryption strength of a country that is needed

enemies : array of enemies at war with

enemies_of_allies : array of enemies of allies

exiles : exile host of this country

faction_leader : faction leader of this country's faction

faction_members : array of faction members

fuel_k : total fuel of country in thousands

highest_party_ideology : ideology of the most popular party. Can exclude the ruling party by using @exclude_ruling_party. Example: highest_party_ideology OR highest_party_ideology@exclude_ruling_party

highest_party_popularity : popularity size of the most popular party [0.00, 1.00]. Can exclude the ruling party by using @exclude_ruling_party. Example: highest_party_popularity OR highest_party_popularity@exclude_ruling_party

host : exile host of this country

legitimacy : legitimacy of scope country. -1 if not an exile

manpower : DEPRECATED, MAY OVERFLOW. total manpower of country

manpower_k : total manpower of country in thousands

max_available_manpower : DEPRECATED, MAY OVERFLOW. total available manpower of country

max_available_manpower_k : total available manpower of country in thousands

max_fuel_k : max fuel of country in thousands

max_manpower : DEPRECATED, MAY OVERFLOW. maximum manpower of country

max_manpower_k : maximum manpower of country in thousands

modifier : a modifier stored in country scope

navy_intel : navy intel against a target country. example GER.navy_intel@ENG

navy_leaders : all navy leaders of a country

neighbors : array of neighbors

neighbors_owned : array of neighbors to owned states

num_armies : number of armies

num_armies_in_state : number of armies in state, state is in target. example num_armies_in_state@123

num_armies_with_type : number of armies with dominant type, dominant type is defined in target. example: num_armies_with_type@light_armor

num_battalions : number of battalions

num_battalions_with_type : number of battalions with sub unit type, sub unit type is defined in target. example: num_battalions_with_type@light_armor

num_controlled_states : number of controlled states

num_core_states : number of core states

num_deployed_planes : number of deployed planes

num_deployed_planes_with_type : number of deployed planes with equipment type. example num_deployed_planes_with_type@fighter

num_equipment : number of equipment in country. example num_equipment@infantry_equipment

num_equipment_in_armies : number of equipment in armies of the country, equipment type token is defined in target. example num_equipment_in_armies@infantry_equipment

num_equipment_in_armies_k : number of equipment in armies of the country in thousands, equipment type token is defined in target. example num_equipment_in_armies_k@infantry_equipment

num_owned_controlled_states : number of owned and core states

num_owned_states : number of owned states

num_ships : number of ships

num_ships_with_type : number of ships controlled in country, ship type is defined in target. example num_ships_with_type@carrier. can be a sub unit def type or one of carrier,capital,screen, submarine

num_target_equipment_in_armies : number of equipment required in armies of the country, equipment type token is defined in target. example num_target_equipment_in_armies@infantry_equipment

num_target_equipment_in_armies_k : number of equipment required in armies of the country in thousands, equipment type token is defined in target. example num_target_equipment_in_armies_k@infantry_equipment

occupied_countries : array of occupied countries

operatives : all operatives of a country

opinion : opinion of a country targeted on another one. example GER.opinion@ENG

original_tag : returns the original tag of a country

overlord : master of this subject

owned_controlled_states : array owned and core states

owned_states : array of owned states

party_popularity : popularity of targeted party [0.00, 1.00]. example party_popularity@democratic. May also target ruling_party. This also supports country variables, so you can party_popularity@my_var_name for variables that store ideologies

political_power : total political power of country

potential_and_current_enemies : array of potential and actual enemies

resource : number of surplus resources in country, resource type is defined in target resource@steel

resource_consumed : number of resources consumed by country, resource type is defined in target resource_consumed@steel

resource_exported : number of resources exported by country, resource type is defined in target resource_exported@steel

resource_imported : number of resources imported by country, resource type is defined in target resource_imported@steel

resource_produced : number of resources produced by country, resource type is defined in target. example resource_produced@steel

stability : stability of a country

subjects : array of subjects

(Trigger) agency_upgrade_number : Checks the number of upgrade done in the intelligence agency. 
agency_upgrade_number > 4

(Trigger) ai_irrationality : check the ai irrationality value

(Trigger) ai_wants_divisions : Will compare towards the amount of divisions an ai wants to have.

(Trigger) alliance_naval_strength_ratio : Compares the estimated naval strength between the scope country, his allies and his enemies.

(Trigger) alliance_strength_ratio : Compares the estimated army strength between the scope country, his allies and his enemies.

(Trigger) amount_manpower_in_deployment_queue : Checks for amount manpower currently in deploymentview. amount_manpower_in_training > 10

(Trigger) amount_research_slots : check number of research current research slots 
 amount_research_slots > 2

(Trigger) any_war_score : compares the warscore of all wars in a country to see if any fullfills the comparison condition 0-100 - Example: any_war_score > 40

(Trigger) casualties : Check the amount of casualties a country has suffered in all of it's wars

(Trigger) casualties_k : Check the amount of casualties in thousands a country has suffered in all of it's wars

(Trigger) command_power_daily : Checks if daily command power increase is more or less that specified value 
 command_power_daily > 1.5

(Trigger) compare_autonomy_progress_ratio : check if autonomy progress ratio is higher than value, example:
compare_autonomy_progress_ratio > 0.5

(Trigger) conscription_ratio : Checks  conscription ratio of the country compared to target conscription ratio.


(Trigger) convoy_threat : A trigger to check convoy threat for a country. Controlled by NAVAL_CONVOY_DANGER defines. Returns a value between 0 and 1. Example convoy_threat > 0.5 

(Trigger) current_conscription_amount : Checks the current conscription amount of the country.


(Trigger) days_since_capitulated : Checks the number of days since the country last capitulated, even if it is no longer capitulated.
	If it has not ever capitulated, the value is extremely large.
	It is recommended to combine this with has_capitulated = yes when you specifically want to ignore non-active capitulations.
Examples:
	HOL = { has_capitulated = yes days_since_capitulated > 60 } # The Netherlands has been capitulated for more than two months
	FRA = { has_capitulated = yes days_since_capitulated < 21 } # France has capitulated sometime within the past three weeks
	GER = { OR = { has_capitulated = no days_since_capitulated > 14 } } # Germany is not both actively and recently capitulated


(Trigger) decryption_progress : checks decryption ratio against a country. Example: 
decryption_progress = { 
 target = GER
 value > 0.5
} 
#or decryption_progress@GER as variable


(Trigger) enemies_naval_strength_ratio : Compares the estimated navy strength between the scope country and all its enemies

(Trigger) enemies_strength_ratio : Compares the estimated army strength between the scope country and all its enemies

(Trigger) foreign_manpower : check the amount of foreign garrison manpower we have

(Trigger) fuel_ratio : Compares the fuel ratio to a variable.
Example: fuel_ratio > 0.5

(Trigger) garrison_manpower_need : check the amount of manpower needed by garrisons

(Trigger) has_added_tension_amount : Compare if the country has added above or below the specified ammount of tension

(Trigger) has_collaboration : checks the collaboration in a target country with our currently scoped country. Example: 
has_collaboration = { 
 target = GER
 value > 0.5
} 
#or has_collaboration@GER as variable


(Trigger) has_legitimacy : Check scope country legitimacy 0-100: Example has_legitimacy < 60

(Trigger) has_manpower : check amount of manpower

(Trigger) has_political_power : check amount of political power

(Trigger) has_stability : check value of stability 0-1: Example has_stability < 0.6

(Trigger) has_war_support : check value of war_support 0-1: Example has_war_support < 0.6

(Trigger) land_doctrine_level : checks researched land doctrine level

(Trigger) manpower_per_military_factory : Number of available manpower per factory the country has. Excluding dockyards.
manpower_per_military_factory < 1000

(Trigger) mine_threat : A trigger to check how dangerous enemy mines are for a country. Controlled by NAVAL_MINE_DANGER defines. Returns a value between 0 and 1. Example mine_threat > 0.5 

(Trigger) network_national_coverage : checks network national coverage you have over a country. Example: 
network_national_coverage = { 
 target = GER
 value > 0.5
} 


(Trigger) num_divisions : Will compare towards the amount of divisions a country has control over, if strength matters use has_army_size.

(Trigger) num_faction_members : Compares the number of members in the faction for the current country. 
 Example: num_faction_members > 10

(Trigger) num_fake_intel_divisions : Will compare towards the amount of fake intel divisions a country has control over. .

(Trigger) num_free_operative_slots : Checks the number of operative a country can recruit right now.
Note that this is not necessarily greater than zero if num_operative_slots returned a number greater than the number of operative.

(Trigger) num_occupied_states : check the number of states occupied by nation

(Trigger) num_of_available_civilian_factories : check amount of available civilian factories

(Trigger) num_of_available_military_factories : check amount of available military factories

(Trigger) num_of_available_naval_factories : check amount of available naval factories

(Trigger) num_of_civilian_factories : check amount of civilian factories

(Trigger) num_of_civilian_factories_available_for_projects : check amount of civilian factories available for a new project to use

(Trigger) num_of_controlled_states : check amount of controlled stats

(Trigger) num_of_factories : check amount of total factories

(Trigger) num_of_military_factories : check amount of military factories

(Trigger) num_of_naval_factories : check amount of naval factories

(Trigger) num_of_nukes : check amount of nukes

(Trigger) num_of_operatives : Checks the number of operatives the country controls

(Trigger) num_operative_slots : Checks the number of available operative slots a country has.
If this differs from the number of operative, this does not mean the country can recruit an operative, but that it will eventually be able to.

(Trigger) num_subjects : check the number of subjects of nation

(Trigger) num_tech_sharing_groups : checks how many groups a nation is a member of

(Trigger) original_research_slots : check number of research slots at start of game

(Trigger) political_power_daily : Checks if daily political power increase is more or less that specified value 
 political_power_daily > 1.5

(Trigger) political_power_growth : Check the value of political power daily growth.Exacmple: political_power_growth > 0

(Trigger) surrender_progress : check if a country is close to surrendering

(Trigger) target_conscription_amount : Checks the target conscription amount of the country.



=================

== State Dynamic Variables ==
arms_factory_level : military factory level in the state

building_level : building level of a building with type, uses target as building type. example building_level@arms_factory

controller : controller of the state

core_countries : countries that cores the state

damaged_building_level : damaged building level of a building with type, uses target as building type. example damaged_building_level@arms_factory

distance_to : distance to another state, uses target as another state. example: 123.distance_to@124

industrial_complex_level : civilian factor level in the state

infrastructure_level : infrastructure level in the state

modifier : value of modifier stored in this state, uses target as modifier token, example: 123.modifier@local_manpower

non_damaged_building_level : non damaged building level of a building with type, uses target as building type. example non_damaged_building_level@arms_factory

owner : owner of the state

resource : resources produced in state. example resource@steel

(Trigger) compliance : Compares the current compliance level of a state to a value. Example: compliance > 50 

(Trigger) compliance_speed : Compares the current compliance speed of a state to a value. Example: compliance_speed > 50 

(Trigger) days_since_last_strategic_bombing : Checks the days since last strategic bombing.
days_since_last_strategic_bombing < 10


(Trigger) resistance : Compares the current resistance level of a state to a value. Example: resistance > 50 

(Trigger) resistance_speed : Compares the current resistance speed of a state to a value. Example: resistance_speed > 50 

(Trigger) resistance_target : Compares the target resistance level of a state to a value. Example: resistance_target > 50 

(Trigger) state_and_terrain_strategic_value : Checks for state strategic value

(Trigger) state_population : check the population in the state

(Trigger) state_population_k : check the population in the state in thousands (use to avoid variable overflows)

(Trigger) state_strategic_value : Checks for state strategic value


=================

== Unit Leader Dynamic Variables ==
army_attack_level : attack level of the leader

army_defense_level : defense level of the leader

attack_level : attack level of the leader

average_stats : average stats of unit leader

avg_combat_status : average progress of all combats

avg_defensive_combat_status : average progress of defensive combats

avg_offensive_combat_status : average progress of offensive combats

avg_unit_planning_ratio : average planning ratio of all units

avg_units_acclimation : average unit acclimatization for a specific climate, acclimatization type is defined in target. example avg_units_acclimation@cold_climate

coordination_level : coordination level of the leader

defense_level : defense level of the leader

has_orders_group : 1 if leader has orders group, zero otherwise

intel_yield_factor_on_capture : Rate at which intel is extracted from this operative by an enemy country.

leader_modifier : value of a modifier stored in leader modifier, modifier token is defined in target. example leader_modifier@navy_max_range

logistics_level : logistics level of the leader

maneuvering_level : maneuvering level of the leader

num_armored : number of units with armored dominant type

num_artillery : number of units with artillery dominant type

num_assigned_traits : number of assigned traits the leader has

num_basic_traits : number of basic traits a leader has

num_battalions : number of battalions

num_battalions_with_type : number of battalions with sub unit type, sub unit type is defined in target. example: num_battalions_with_type@light_armor

num_battle_plans : number of battle plans of unit leader

num_cavalry : number of units with cavalry dominant type

num_equipment : number of equipment in army of a leader, equipment type token is defined in target. example num_equipment@infantry_equipment

num_infantry : number of units with infantry dominant type

num_max_traits : number of maximum assignable traits a leader can have

num_mechanized : number of units with mechanized dominant type

num_motorized : number of units with motorized dominant type

num_personality_traits : number of personality traits a leader has

num_rocket : number of units with rocket dominant type

num_ships : number of ships controlled by leader

num_ships_with_type : number of ships controlled by leader, ship type is defined in target. example num_ships_with_type@carrier

num_special : number of units with special dominant type

num_status_traits : number of status traits a leader has

num_target_equipment : number of equipment required in army of a leader, equipment type token is defined in target. example num_target_equipment@infantry_equipment

num_terrain_traits : number of terrain traits a leader has

num_traits : number of traits a leader has

num_units : number of units controlled by leader

num_units_crossing_river : number of units currently passing through a river

num_units_defensive_combats : number of units in defensive combats

num_units_defensive_combats_on : number of units that are defensively fighting on a terrain, terrain type is defined as target. example: num_units_defensive_combats_on@plains

num_units_in_combat : number of units current fighting

num_units_in_state : number of units controlled by leader in state, state is in target. example num_units_in_state@123

num_units_offensive_combats : number of units in offensive combats

num_units_offensive_combats_against : number of units that are offensively fighting against a terrain, terrain type is defined as target. example: num_units_offensive_combats_against@plains

num_units_on_climate : number of units that are on an acclimatization required location, acclimatization type is defined in target. example num_units_on_climate@hot_climate

num_units_with_type : number of units with dominant type controlled by leader, dominant type is defined in target. example: num_units_with_type@light_armor

operation_country : the country location the operative is assigned. 0 if it is not assigned to a country

operation_state : the state location the operative is assigned. 0 if it is not assigned to a state

operation_type : returns the operation token the operative is assigned

operative_captor : returns the country tag that captured the operative

own_capture_chance_factor : The chance this operative has to be captured, taking into account the country it is operating for and the country it is operating against.

own_forced_into_hiding_time_factor : The time factor applied to the status "forced into hiding". Takes into account the country it is operating for and the country it is operating against.

own_harmed_time_factor : The time factor applied to the status "harmed". Takes int accountthe country it is operating for and the country it is operating against.

planning_level : planning level of the leader

skill_level : skill level of the leader

sum_unit_terrain_modifier : sum of terrain modifiers of each army's location, terrain type is defined in target. example: sum_unit_terrain_modifier@sickness_chance 

unit_modifier : value of a modifier stored in unit modifier, modifier token is defined in target. example unit_modifier@army_attack_factor

unit_ratio_ready_for_plan : ratio of units that are ready for plan

(Trigger) attack_skill_level : Compares attack skill level of a unit leader.
Example: attack_skill_level > 5

(Trigger) defense_skill_level : Compares defense skill level of a unit leader.
Example: defense_skill_level > 5

(Trigger) logistics_skill_level : Compares logistics skill level of a unit leader.
Example: logistics_skill_level > 5

(Trigger) planning_skill_level : Compares planning skill level of a unit leader.
Example: planning_skill_level > 5

(Trigger) skill : compare leader skill levels
